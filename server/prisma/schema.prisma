// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    name      String
    email     String   @unique
    password  String
    createdAt DateTime @default(now())

    lists         List[]
    products      Product[]
    PantryItem    PantryItem[]
    PantryHistory PantryHistory[]
}

model List {
    id        Int       @id @default(autoincrement())
    name      String
    color     String
    due       DateTime?
    createdAt DateTime  @default(now())
    checked   Boolean   @default(false)
    checkedAt DateTime?

    items ListItem[]

    user   User @relation(fields: [userId], references: [id])
    userId Int
}

// TODO: Tentar arrumar erro do productId
model ListItem {
    id      Int     @id @default(autoincrement())
    checked Boolean @default(false)
    amount  Float   @default(1)

    list   List @relation(fields: [listId], references: [id])
    listId Int

    product   Product @relation(fields: [productId], references: [id])
    productId Int
}

model Product {
    id      Int     @id @default(autoincrement())
    name    String
    price   Float   @default(0)
    public  Boolean @default(false)
    dueTime Int?

    list ListItem[]

    brand String?

    user          User            @relation(fields: [userId], references: [id])
    userId        Int
    PantryItem    PantryItem[]
    PantryHistory PantryHistory[]
}

model PantryItem {
    id     Int   @id @default(autoincrement())
    amount Float @default(1)

    user User @relation(fields: [userId], references: [id])

    product   Product @relation(fields: [productId], references: [id])
    productId Int
    userId    Int
}

model PantryHistory {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())

    amount Int @default(1)

    product   Product @relation(fields: [productId], references: [id])
    productId Int

    user   User @relation(fields: [userId], references: [id])
    userId Int
}

model Recipe {
    id          Int     @id @default(autoincrement())
    name        String
    description String?
    content     String
}
